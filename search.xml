<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>中科蓝汛--AB5335系列蓝牙信号超出距离的处理</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E6%B1%9B--AB5335%E7%B3%BB%E5%88%97%20%E8%93%9D%E7%89%99%E4%BF%A1%E5%8F%B7%E8%B6%85%E5%87%BA%E8%B7%9D%E7%A6%BB%E7%9A%84%E5%A4%84%E7%90%86/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E6%B1%9B--AB5335%E7%B3%BB%E5%88%97%20%E8%93%9D%E7%89%99%E4%BF%A1%E5%8F%B7%E8%B6%85%E5%87%BA%E8%B7%9D%E7%A6%BB%E7%9A%84%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>1.超出距离的消息处理<br>会执行到下面这个函数的消息处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void bt_emit_notice(uint evt, u32 param)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">case BT_NOTICE_LOSTCONNECT:</span><br><span class="line">        connect_lost_flag = 1;</span><br><span class="line">        piano_res_play(T_WARNING_NEXT_TRACK, 3);    //“滴”一声</span><br><span class="line">        break;</span><br></pre></td></tr></table></figure><p>2.超出距离重新连接<br>会执行void func_bt_disp_status(void)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">switch (f_bt.disp_status) &#123;</span><br><span class="line">      ......</span><br><span class="line">        case BT_STA_CONNECTED:</span><br><span class="line">           connect_lost_flag = 0;</span><br><span class="line">           led_bt_connected();</span><br><span class="line">           break;</span><br><span class="line">       ......</span><br></pre></td></tr></table></figure><p>3.在定时器处理蓝牙超出距离的灯闪<br>usr_tmr5ms_isr</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">if ((cnt_5ms % 20) == 0)&#123;</span><br><span class="line"></span><br><span class="line">       if( connt_lost_flag)&#123;</span><br><span class="line">           count_bt_lost++;</span><br><span class="line">           count_bt_lost_led++;</span><br><span class="line">           if(count_bt_lost ==100)&#123;//10S timer process</span><br><span class="line">           msg_enqueue(EVT_BT_LOSTCONNECT);</span><br><span class="line">           count_bt_lost= 0;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       if(count_bt_lost_led == 5)&#123;</span><br><span class="line">           led_on();</span><br><span class="line">           rled_off();</span><br><span class="line">       &#125;else if(count_bt_lost_led == 10)&#123;</span><br><span class="line">           led_off();</span><br><span class="line">           rled_off();</span><br><span class="line">           count_bt_lost_led=0;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>4.超出距离提示音</p><p>提示音最好放到消息处理中播放</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msg_bt.c</span><br><span class="line"></span><br><span class="line">case EVT_BT_LOSTCONNECT:</span><br><span class="line">      piano_res_play(T_WARNING_NEXT_TRACK, 3);    //“滴”一声</span><br><span class="line">      break;</span><br></pre></td></tr></table></figure><p>5.超出距离后重新连接</p><p>void bt_emit_notice(uint evt, u32 param)函数需要做一下处理，否则会一直嘀嘀响</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">case BT_NOTICE_CONNECTED://连接上清除标志位</span><br><span class="line">       connt_lost_flag = 0;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AB5335 </tag>
            
            <tag> 蓝牙距离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯系列蓝牙IC编译工具安装</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF%E7%B3%BB%E5%88%97%E8%93%9D%E7%89%99IC%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF%E7%B3%BB%E5%88%97%E8%93%9D%E7%89%99IC%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>1.2.1安装codeblocks<br>文件夹01-tools\02-compile\编译环境下找到codeblocks-17.12-setup.exe<br>双击即可安装。<br>或下载文末资源找到codeblocks-17.12-setup.exe<br><img src="https://img-blog.csdnimg.cn/20191213001124301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Next</p><p><img src="https://img-blog.csdnimg.cn/20191213001144439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>I Agree</p><p><img src="https://img-blog.csdnimg.cn/20191213001154771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>默认选项-next</p><p><img src="https://img-blog.csdnimg.cn/20191213001210364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>默认选项 – Install</p><p><img src="https://img-blog.csdnimg.cn/20191213001224901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>安装中<br><img src="https://img-blog.csdnimg.cn/20191213001237455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="安装后选完成"><a href="#安装后选完成" class="headerlink" title="安装后选完成"></a>安装后选完成</h5><p>到这就完成了编译工具的安装，先别打开编译工具，想要编译程序还需要安装编译链。</p><p>1.2.2安装编译链</p><p>01-tools\02-compile\编译环境\RV32-Toolchain-Setup_v0.8.0</p><p>&amp;emsp;&amp;emsp;双击安装<br><img src="https://img-blog.csdnimg.cn/20191213001315319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&amp;emsp;&amp;emsp;默认选项–下一步<br><img src="https://img-blog.csdnimg.cn/20191213001432418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>&amp;emsp;&amp;emsp;安装中，安装完成后选finish。</p><p>1.2.3使用编译工具<br>&amp;emsp;&amp;emsp;打开安装好的code block，把SDK_AB537X_S103_20191031\app\projects\earphone路径下的app.cbp文件拉进去。</p><p><img src="https://img-blog.csdnimg.cn/2019121300152489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&amp;emsp;&amp;emsp;编译<br><img src="https://img-blog.csdnimg.cn/20191213001532601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>&amp;emsp;&amp;emsp;编译成功<br><img src="https://img-blog.csdnimg.cn/20191213001549254.png" alt="在这里插入图片描述"></p><p>&amp;emsp;&amp;emsp;至此，已经可以正式编译烧写代码了。</p>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeblocks </tag>
            
            <tag> RV32-Toolchain-Setup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯系列IC下载工具安装及介绍</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF%E7%B3%BB%E5%88%97IC%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BB%8B%E7%BB%8D/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF%E7%B3%BB%E5%88%97IC%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p>&amp;emsp;&amp;emsp;蓝讯的开发工具很齐全，图像化编程界面对开发者十分友好，蓝牙耳机的功能大部分可以通过图形化编程工具完成，开发效率极高。开发蓝讯系列蓝牙方案主要的开发工具有蓝讯的烧写工具Downloader，编译工具codeblock，编辑器source insight等<br>&amp;emsp;&amp;emsp;下面讲的是下载工具的安装。</p><h2 id="1-1烧写工具Downloader的安装"><a href="#1-1烧写工具Downloader的安装" class="headerlink" title="1.1烧写工具Downloader的安装"></a>1.1烧写工具Downloader的安装</h2><h3 id="文件夹Downloader-v1-2-3直接双击Downloader-exe安装。可能会出现下面的提示。"><a href="#文件夹Downloader-v1-2-3直接双击Downloader-exe安装。可能会出现下面的提示。" class="headerlink" title="文件夹Downloader_v1.2.3直接双击Downloader.exe安装。可能会出现下面的提示。"></a>文件夹Downloader_v1.2.3直接双击Downloader.exe安装。可能会出现下面的提示。</h3><p><img src="https://img-blog.csdnimg.cn/20191207000509810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="1-1-2安装：-NET-Franmework-3-5"><a href="#1-1-2安装：-NET-Franmework-3-5" class="headerlink" title="1.1.2安装：.NET Franmework 3.5"></a>1.1.2安装：.NET Franmework 3.5</h3><p>点击下载安装此功能<br>下载界面如下：<br><img src="https://img-blog.csdnimg.cn/20191207000540409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>等待下载</p><p>下载完自动安装<br><img src="https://img-blog.csdnimg.cn/20191207000552536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="1-1-3安装完成"><a href="#1-1-3安装完成" class="headerlink" title="1.1.3安装完成"></a>1.1.3安装完成</h3><p><img src="https://img-blog.csdnimg.cn/20191207000615131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="1-1-4打开下载工具"><a href="#1-1-4打开下载工具" class="headerlink" title="1.1.4打开下载工具"></a>1.1.4打开下载工具</h3><p>安装后双击Downloader.exe即可以打开<br><img src="https://img-blog.csdnimg.cn/201912070006485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="1-1-5download工具介绍"><a href="#1-1-5download工具介绍" class="headerlink" title="1.1.5download工具介绍"></a>1.1.5download工具介绍</h3><p>先打开一个工程，以最新的76A开发包为例。打开目录AB537x\SDK_AB537X_S103_20191031\app\projects\earphone\Output\bin<br>把app.dcf文件拖进下载工具。<br><img src="https://img-blog.csdnimg.cn/20191207000730457.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019120700074421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>以上需要用到的工具的是：</p><p>1.SDK_AB537X_S103_20191031<br>2.Downloader_v1.2.3<br>资源下载地址：&#x2F;&#x2F;download.csdn.net&#x2F;download&#x2F;qq_40860986&#x2F;12017013<br>没有C币下载的话，直接私聊我吧</p>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝讯开发基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯--AB532X系列PWM的使用</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF%E8%93%9D%E7%89%99%E6%96%B9%E6%A1%88%E5%BC%80%E5%8F%91%E8%A7%A3%E5%86%B3%E9%9F%B3%E7%AE%B1%E5%BC%80%E6%9C%BA%E5%99%97%E5%99%97%E5%A3%B0/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF%E8%93%9D%E7%89%99%E6%96%B9%E6%A1%88%E5%BC%80%E5%8F%91%E8%A7%A3%E5%86%B3%E9%9F%B3%E7%AE%B1%E5%BC%80%E6%9C%BA%E5%99%97%E5%99%97%E5%A3%B0/</url>
      
        <content type="html"><![CDATA[<p>&amp;emsp;&amp;emsp;解决音箱开机噗噗声，功放IC为LTK5128  2018和8871。都是1脚低开高秒，3脚AB类&#x2F;D类转换，其他模式高电平</p><p>&amp;emsp;&amp;emsp;在初始化后，mute功放和切换AB类。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LOUDSPEAKER_MUTE_INIT();</span><br><span class="line">AMPLIFIER_SEL_INIT();</span><br><span class="line"></span><br><span class="line">LOUDSPEAKER_MUTE();</span><br><span class="line">AMPLIFIER_SEL_AB();</span><br></pre></td></tr></table></figure><p>在播报提示音之前恢复正常</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> LOUDSPEAKER_UNMUTE();</span><br><span class="line">    AMPLIFIER_SEL_D();</span><br><span class="line">    delay_5ms(2);</span><br><span class="line"></span><br><span class="line">#if WARNING_POWER_ON</span><br><span class="line">    mp3_res_play(RES_BUF_POWERON_MP3, RES_LEN_POWERON_MP3);</span><br><span class="line">#endif // WARNING_POWER_ON</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功放 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯蓝牙耳机AB5356A_AB5376A进入CBT模式</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E6%B1%9B%E8%93%9D%E7%89%99%E8%80%B3%E6%9C%BAAB5356A_AB5376A%E8%BF%9B%E5%85%A5CBT%E6%A8%A1%E5%BC%8F/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E6%B1%9B%E8%93%9D%E7%89%99%E8%80%B3%E6%9C%BAAB5356A_AB5376A%E8%BF%9B%E5%85%A5CBT%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>56A进入CBT模式：<br>&amp;emsp;&amp;emsp;配置工具默认是这样的：<br><img src="https://img-blog.csdnimg.cn/20191018002251728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODYwOTg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>&amp;emsp;&amp;emsp;配置工具只支持5击进入CBT模式。客户需求是3击，进入CBT模式后蓝灯500ms周期闪烁下面是实现过程。</p><p>&amp;emsp;&amp;emsp;在消息处理msg_bt.c中添加三击处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">case KTH_PLAY_PWR_USER_DEF:    ///三击进CBT测试模式</span><br><span class="line">//        printf(&quot;KTH_PLAY_PWR_USER_DEF\n&quot;);</span><br><span class="line">        //led_set_sta(0x00,0xaa,10,0);</span><br><span class="line">        led_on();</span><br><span class="line">        if (!bt_nor_is_connected()) &#123;</span><br><span class="line">            printf(&quot;FUNC_BT_CBT\n&quot;);</span><br><span class="line">            if(xcfg_cb.bb_cbt_test_en == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                xcfg_cb.bb_cbt_test_en = 1;</span><br><span class="line">                led_set_sta(0x00, 0xaa, 5, 0);          </span><br><span class="line">                //蓝灯500ms周期闪烁，</span><br><span class="line">                bt_cfg.cbt_test_mode = xcfg_cb.bb_cbt_test_en;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        break;</span><br></pre></td></tr></table></figure><p>&amp;emsp;&amp;emsp;led_set_sta函数使用方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">void led_set_sta(u8 rled_sta, u8 bled_sta, u8 uint, u8 period);</span><br><span class="line">led_set_sta(0x00, 0xaa, 5, 0); </span><br></pre></td></tr></table></figure><p>&amp;emsp;rled_sta红灯的状态，对应配置工具的红灯点<br>&amp;emsp;bled_sta蓝灯的状态，对应配置工具的蓝灯点</p><p><img src="https://img-blog.csdnimg.cn/20191018002546230.png" alt="在这里插入图片描述"></p><p>&amp;emsp;uint表示一个单位时间&#x3D;uint*50ms<br>&amp;emsp;period表示闪灯周期</p><p>&amp;emsp;led_set_sta(0x00, 0xaa, 5, 0);<br>&amp;emsp;相当于<br><img src="https://img-blog.csdnimg.cn/20191018002613556.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AB537X </tag>
            
            <tag> CBT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯蓝牙耳机SDK解析</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF%E8%93%9D%E7%89%99%E8%80%B3%E6%9C%BASDK%E8%A7%A3%E6%9E%90/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF%E8%93%9D%E7%89%99%E8%80%B3%E6%9C%BASDK%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="SDK结构"><a href="#SDK结构" class="headerlink" title="SDK结构"></a>SDK结构</h2><h4 id="1-1SDK目录结构"><a href="#1-1SDK目录结构" class="headerlink" title="1.1SDK目录结构"></a>1.1SDK目录结构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">└─app</span><br><span class="line">    ├─platform       </span><br><span class="line">    │  ├─bsp       //底层外设相关</span><br><span class="line">    │  ├─functions   //功能相关</span><br><span class="line">    │  ├─gui        //显示功能</span><br><span class="line">    │  ├─header</span><br><span class="line">    │  └─libs</span><br><span class="line">    └─projects//调用API</span><br><span class="line">        └─earphone</span><br><span class="line">            ├─display   //显示</span><br><span class="line">            ├─message  //消息处理</span><br><span class="line">            ├─Output   //文件输出</span><br><span class="line">            │  └─bin   //音乐文件，配置</span><br><span class="line">            │      ├─res</span><br><span class="line">            │      │  ├─en</span><br><span class="line">            │      │  ├─eq</span><br><span class="line">            │      │  └─zh</span><br><span class="line">            │      └─Settings</span><br><span class="line">            │          └─Resources</span><br><span class="line">            │              ├─S6</span><br><span class="line">            │              │  ├─en</span><br><span class="line">            │              │  └─zh</span><br><span class="line">            │              └─TWS</span><br><span class="line">            │                  ├─en</span><br><span class="line">            │                  └─zh</span><br><span class="line">            ├─plugin//插件</span><br><span class="line">            └─port//移植</span><br></pre></td></tr></table></figure><h5 id="1-1-1bsp目录"><a href="#1-1-1bsp目录" class="headerlink" title="1.1.1bsp目录"></a>1.1.1bsp目录</h5><p>该目录下，包含一些和底层硬件相关的数据，函数初始化</p><p><img src="https://img-blog.csdnimg.cn/20200301172832299.png" alt="在这里插入图片描述"></p><h5 id="1-1-2functions目录"><a href="#1-1-2functions目录" class="headerlink" title="1.1.2functions目录"></a>1.1.2functions目录</h5><p>主要包括蓝牙功能的实现，大部分的函数以库函数的形式提供<br> <img src="https://img-blog.csdnimg.cn/20200301172849850.png" alt="在这里插入图片描述"></p><h5 id="1-1-3Message目录"><a href="#1-1-3Message目录" class="headerlink" title="1.1.3Message目录"></a>1.1.3Message目录</h5><p>主要包括按键消息处理，是蓝牙方案经常需要改动的目录<br> <img src="https://img-blog.csdnimg.cn/20200301172856481.png" alt="在这里插入图片描述"></p><h5 id="1-1-4Plugin目录"><a href="#1-1-4Plugin目录" class="headerlink" title="1.1.4Plugin目录"></a>1.1.4Plugin目录</h5><p>音乐文件的调用，基本不会去修改这里<br> <img src="https://img-blog.csdnimg.cn/20200301172909689.png" alt="在这里插入图片描述"></p><h5 id="1-1-5Port目录"><a href="#1-1-5Port目录" class="headerlink" title="1.1.5Port目录"></a>1.1.5Port目录</h5><p>主要包括硬件外设的调用，mani函数</p><p> <img src="https://img-blog.csdnimg.cn/20200301172905332.png" alt="在这里插入图片描述"></p><h3 id="2代码运行流程"><a href="#2代码运行流程" class="headerlink" title="2代码运行流程"></a>2代码运行流程</h3><h4 id="2-1初始化"><a href="#2-1初始化" class="headerlink" title="2.1初始化"></a>2.1初始化</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//正常启动Main函数</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello AB533X!\n&quot;);</span><br><span class="line">    bsp_sys_init();</span><br><span class="line"></span><br><span class="line">    func_run();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>bsp_sys_init();函数主要包括各种功能的初始化，<strong>获取download工具的配置。</strong><br>func_run();主要是处理蓝牙消息和硬件的消息。</p><h4 id="2-2各模式循环"><a href="#2-2各模式循环" class="headerlink" title="2.2各模式循环"></a>2.2各模式循环</h4><p>初始化之后，进入一个FUN函数，蓝牙耳机的FUN函数基本上都在跑func_bt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">void func_run(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;%s\n&quot;, __func__);</span><br><span class="line">    //func_cb.sta = FUNC_AUX;</span><br><span class="line">    while (1) &#123;</span><br><span class="line">        func_clear();</span><br><span class="line">        switch (func_cb.sta) &#123;</span><br><span class="line">#if FUNC_BT_EN</span><br><span class="line">        case FUNC_BT:</span><br><span class="line">            func_bt();</span><br><span class="line">            break;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">#if FUNC_BTHID_EN</span><br><span class="line">        case FUNC_BTHID:</span><br><span class="line">            func_bthid();</span><br><span class="line"></span><br><span class="line">            break;</span><br><span class="line">#endif // FUNC_BTHID_EN</span><br><span class="line"></span><br><span class="line">#if FUNC_AUX_EN</span><br><span class="line">        case FUNC_AUX:</span><br><span class="line">            func_aux();</span><br><span class="line">            break;</span><br><span class="line">#endif // FUNC_AUX_EN</span><br><span class="line"></span><br><span class="line">        case FUNC_PWROFF:</span><br><span class="line">            func_pwroff(sys_cb.pwrdwn_tone_en);</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case FUNC_BT_CBT:</span><br><span class="line">            func_bt_cbt();</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line">            func_exit();</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-3蓝牙模式"><a href="#2-3蓝牙模式" class="headerlink" title="2.3蓝牙模式"></a>2.3蓝牙模式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">AT(.text.func.bt)</span><br><span class="line">void func_bt(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;func_bt\n&quot;);</span><br><span class="line">    func_bt_enter();</span><br><span class="line">    while (func_cb.sta == FUNC_BT) &#123;</span><br><span class="line">        func_bt_process();</span><br><span class="line">        func_bt_message(msg_dequeue());</span><br><span class="line">    &#125;</span><br><span class="line">    func_bt_exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在程序跑到func_bt();的时候，SDK留给开发者处理的只有消息处理和电量检测，来电检测等，蓝牙耳机接收音频信号，解码那些都是屏蔽起来的。<br>printf(“%s\n”, <strong>func</strong>);</p><h5 id="2-3-1进入蓝牙模式"><a href="#2-3-1进入蓝牙模式" class="headerlink" title="2.3.1进入蓝牙模式"></a>2.3.1进入蓝牙模式</h5><p>func_bt_enter();<br>主要执行蓝牙初始化，播报提示音</p><h5 id="2-3-2蓝牙模式大循环"><a href="#2-3-2蓝牙模式大循环" class="headerlink" title="2.3.2蓝牙模式大循环"></a>2.3.2蓝牙模式大循环</h5><p>func_bt_process();<br>包括响铃，通话，蓝牙音乐<br>sfunc_bt_ring();<br>sfunc_bt_call();</p><p>func_bt_message(msg_dequeue());<br>消息处理</p><h5 id="2-3-3补充"><a href="#2-3-3补充" class="headerlink" title="2.3.3补充"></a>2.3.3补充</h5><p>C语言的特殊宏<br>LINE 表示正在编译的文件的行号<br>FILE 表示正在编译的文件的名字<br>DATE_ 表示编译时刻的日期字符串，例如： “25 Dec 2007”<br>TIME 表示编译时刻的时间字符串，例如： “12:30:55”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">        printf(&quot;%s\r\n&quot;,__FILE__);</span><br><span class="line">        printf(&quot;%d\r\n&quot;,__LINE__);</span><br><span class="line">        printf(&quot;%s\r\n&quot;,__DATE__);</span><br><span class="line">        printf(&quot;%s\r\n&quot;,__TIME__);</span><br><span class="line">        return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">speci_define.c</span><br><span class="line">6</span><br><span class="line">Jul  6 2019</span><br><span class="line">00:46:39</span><br></pre></td></tr></table></figure><h4 id="2-4消息"><a href="#2-4消息" class="headerlink" title="2.4消息"></a>2.4消息</h4><p>经常需要改动的部分</p><h5 id="2-4-1消息处理："><a href="#2-4-1消息处理：" class="headerlink" title="2.4.1消息处理："></a>2.4.1消息处理：</h5><p>二次开发中修改最多的部分就是消息处理这一块，按键消息处理的修改最多。按键消息有长按，短按，双击，三击，四击，五击等等<br>Func函数的为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">AT(.text.func.msg)</span><br><span class="line">void func_message(u16 msg)</span><br><span class="line">&#123;</span><br><span class="line">    switch (msg) &#123;</span><br><span class="line">        case KL_NEXT_VOL_UP://如果长按NEXT_VOL_UP这个按键</span><br><span class="line">            if (sfunc_bt_call_flag) &#123;</span><br><span class="line">……</span><br><span class="line">            break;</span><br><span class="line">&#125;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-4-2消息来源："><a href="#2-4-2消息来源：" class="headerlink" title="2.4.2消息来源："></a>2.4.2消息来源：</h5><p>以按键为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void msg_enqueue(u16 msg);//消息队列</span><br></pre></td></tr></table></figure><p>在程序中执行按键扫描函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">u8 bsp_key_scan(void)</span><br><span class="line">&#123;</span><br><span class="line">    u8 key_val = NO_KEY;</span><br><span class="line">    u16 key = NO_KEY;</span><br><span class="line"></span><br><span class="line">    pwrkey_2_hw_pwroff_detect();</span><br><span class="line"></span><br><span class="line">    if (!get_adc_val()) &#123;</span><br><span class="line">        return NO_KEY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">#if USER_ADKEY</span><br><span class="line">    key_val = get_adkey(adc_cb.key_val, xcfg_cb.user_adkey_en);</span><br><span class="line">#endif // USER_ADKEY</span><br><span class="line"></span><br><span class="line">#if USER_ADKEY2</span><br><span class="line">    if (key_val == NO_KEY) &#123;</span><br><span class="line">        key_val = get_adkey2();</span><br><span class="line">    &#125;</span><br><span class="line">#endif // USER_ADKEY2</span><br><span class="line"></span><br><span class="line">#if USER_IOKEY</span><br><span class="line">    if (key_val == NO_KEY) &#123;</span><br><span class="line">        key_val = get_iokey();</span><br><span class="line">    &#125;</span><br><span class="line">#endif // USER_IOKEY</span><br><span class="line"></span><br><span class="line">#if USER_PWRKEY</span><br><span class="line">    if (key_val == NO_KEY) &#123;</span><br><span class="line">        key_val = get_pwrkey();</span><br><span class="line">    &#125;</span><br><span class="line">#endif // USER_PWRKEY</span><br><span class="line"></span><br><span class="line">#if VBAT_DETECT_EN</span><br><span class="line">    sys_cb.vbat = get_vbat_val();</span><br><span class="line">#endif // VBAT_DETECT_EN</span><br><span class="line"></span><br><span class="line">#if (IRRX_SW_EN || IRRX_HW_EN)</span><br><span class="line">    if (key_val == NO_KEY) &#123;</span><br><span class="line">        key_val = get_irkey();</span><br><span class="line">    &#125;</span><br><span class="line">#endif // (IRRX_SW_EN || IRRX_HW_EN)</span><br><span class="line"></span><br><span class="line">#if USER_ADKEY_MUX_SDCLK</span><br><span class="line">    //需要放到最后处理,当没进行adc convert需要返回</span><br><span class="line">    if (key_val == NO_KEY) &#123;</span><br><span class="line">        if (!adc_cb.sdclk_valid) &#123;</span><br><span class="line">            return NO_KEY;</span><br><span class="line">        &#125;</span><br><span class="line">        key_val = get_adkey(adc_cb.sdclk_val, xcfg_cb.user_adkey_mux_sdclk_en);</span><br><span class="line">    &#125;</span><br><span class="line">#endif // USER_ADKEY_MUX_SDCLK</span><br><span class="line"></span><br><span class="line">    key = bsp_key_process(key_val);//得到具体按下哪个按键</span><br><span class="line">    if (key != NO_KEY) &#123;</span><br><span class="line">        //printf(&quot;enqueue: %04x\n&quot;, key);</span><br><span class="line">        if ((key &amp; KEY_TYPE_MASK) == KEY_LONG_UP) &#123;</span><br><span class="line">            msg_queue_detach(key | KEY_HOLD);       //长按抬键，先清掉HOLD按键消息</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">#if KEY_MSG_REMAP_EN</span><br><span class="line">        key_msg_remap(&amp;key);   //按键重映射.</span><br><span class="line">#endif</span><br><span class="line">        msg_enqueue(key);//把消息放到消息队列</span><br><span class="line">    &#125;</span><br><span class="line">    return key_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-4-3按键消息的注意事项："><a href="#2-4-3按键消息的注意事项：" class="headerlink" title="2.4.3按键消息的注意事项："></a>2.4.3按键消息的注意事项：</h5><p>下面的宏都是按键消息：<br>以PLAY按键为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#define K_PLAY                  (KEY_PLAY | KEY_SHORT)//下降沿</span><br><span class="line">#define KU_PLAY                 (KEY_PLAY | KEY_SHORT_UP)          //上升沿</span><br><span class="line">#define KL_PLAY                 (KEY_PLAY | KEY_LONG) //长按</span><br><span class="line">#define KLU_PLAY                (KEY_PLAY | KEY_LONG_UP) //长按上升沿</span><br><span class="line">#define KH_PLAY                 (KEY_PLAY | KEY_HOLD) //长按2秒左右</span><br><span class="line">#define KD_PLAY                 (KEY_PLAY | KEY_DOUBLE) //双击</span><br><span class="line">#define KTH_PLAY                (KEY_PLAY | KEY_THREE) //三击</span><br><span class="line">#define KFO_PLAY                (KEY_PLAY | KEY_FOUR) //四击</span><br><span class="line">#define KFI_PLAY                (KEY_PLAY | KEY_FIVE) //五击</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意！每次按键都会触发下降沿。<br>以蓝牙模式为例：<br>程序先在func_bt_message函数做判断，如果在该函数没有找到一致的case，则会跑到公共的消息处理函数中 void func_message(u16 msg) 再做判断。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">AT(.text.func.bt.msg)</span><br><span class="line">void func_bt_message(u16 msg)</span><br><span class="line">&#123;</span><br><span class="line">    switch (msg) &#123;</span><br><span class="line"></span><br><span class="line">    case KU_PLAY:</span><br><span class="line">    case KU_PLAY_POWER:</span><br><span class="line">    case KU_PLAY_MODE:</span><br><span class="line">        bt_music_play_pause();</span><br><span class="line">        f_bt.pp_2_unmute = sys_cb.mute;</span><br><span class="line">        break;</span><br><span class="line"></span><br><span class="line">    case KU_PREV_VOL_DOWN:</span><br><span class="line">    case KL_VOL_DOWN_PREV:</span><br><span class="line">    case KU_PREV:</span><br><span class="line">        bt_music_prev();</span><br><span class="line">        sys_cb.key2unmute_cnt = 15 * sys_cb.mute;</span><br><span class="line">        break;</span><br><span class="line">……</span><br><span class="line">    default:</span><br><span class="line">        func_message(msg);</span><br><span class="line">        break;</span><br></pre></td></tr></table></figure><h5 id="2-4-4应用：1S消息"><a href="#2-4-4应用：1S消息" class="headerlink" title="2.4.4应用：1S消息"></a>2.4.4应用：1S消息</h5><p>再定时器中，每隔一秒发送一个消息MSG_SYS_1S</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msg_enqueue(MSG_SYS_1S);</span><br><span class="line">    void usr_tmr5ms_isr(void)</span><br><span class="line">&#123;</span><br><span class="line">//1s timer process</span><br><span class="line">    if ((tmr5ms_cnt % 200) == 0) &#123;</span><br><span class="line">        msg_enqueue(MSG_SYS_1S);</span><br><span class="line">        tmr5ms_cnt = 0;</span><br><span class="line">        sys_cb.lpwr_warning_cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再蓝牙消息或者公共消息做处理，常用的1秒消息处理有报告电量，连接蓝牙自动播放。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">case MSG_SYS_1S:</span><br><span class="line">      bt_send_msg(BT_MSG_HFP_REPORT_BAT);</span><br><span class="line">      break;</span><br></pre></td></tr></table></figure><h5 id="2-4-5蓝牙消息函数："><a href="#2-4-5蓝牙消息函数：" class="headerlink" title="2.4.5蓝牙消息函数："></a>2.4.5蓝牙消息函数：</h5><p>三个状态的消息处理，蓝牙模式比较特殊，除了一个func_bt_message还有两个，响铃，通话。</p><p>响铃:void sfunc_bt_ring_message(u16 msg)<br>来电响铃的时候执行消息处理，主要包括接&#x2F;挂电话，电量报告和按键消息公共处理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">AT(.text.func.btring.msg)</span><br><span class="line">void sfunc_bt_ring_message(u16 msg)</span><br><span class="line">&#123;</span><br><span class="line">    switch (msg) &#123;</span><br><span class="line">    case KU_PLAY:</span><br><span class="line">    case KU_HSF:                //接听</span><br><span class="line">    case KU_PLAY_POWER:</span><br><span class="line">    case KU_PLAY_MODE:</span><br><span class="line">        bsp_clr_mute_sta();</span><br><span class="line">        bt_call_answer_incoming();</span><br><span class="line">        break;</span><br><span class="line"></span><br><span class="line">    case KD_PLAY:</span><br><span class="line">    case KL_HSF:</span><br><span class="line">    case KD_HSF:</span><br><span class="line">        bsp_clr_mute_sta();</span><br><span class="line">        bt_call_terminate();    //挂断</span><br><span class="line">        break;</span><br><span class="line"></span><br><span class="line">    case MSG_SYS_1S:</span><br><span class="line">        bt_send_msg(BT_MSG_HFP_REPORT_BAT);</span><br><span class="line">        break;</span><br><span class="line"></span><br><span class="line">    default:</span><br><span class="line">        func_message(msg);</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通话中:sfunc_bt_call_message();<br>通话过程的按键消息处理，主要包括音量调整，三方通话，电量报告</p><p>Music: void func_bt_message(u16 msg)<br>    蓝牙音乐模式的消息处理，上下曲切换，暂停播放，音量调整，报告电池电量等</p>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝讯教程 </tag>
            
            <tag> SDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯AB5325A音箱回连慢解决方法</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AFAB5325A%E9%9F%B3%E7%AE%B1%E5%9B%9E%E8%BF%9E%E6%85%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AFAB5325A%E9%9F%B3%E7%AE%B1%E5%9B%9E%E8%BF%9E%E6%85%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>SDK版本：AB532X_S9170</p><p>解决方法：</p><p>未回连的状态下，在程序中调用回连函数<br>程序处理：<br>在1秒调用消息中添加判断，是否有回连信息<code>bt_nor_get_link_info(NULL)</code>和蓝牙是否处于配对状态<code>!(bt_nor_is_connected())</code>。两者都满足则调用一次回连函数。直到回连上设备。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  case MSG_SYS_1S:</span><br><span class="line">      bt_send_msg(BT_MSG_HFP_REPORT_BAT);</span><br><span class="line">if(bt_nor_get_link_info(NULL) &amp;&amp; !(bt_nor_is_connected()) )&#123;</span><br><span class="line">bt_connect();</span><br><span class="line">&#125;</span><br><span class="line">      break;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回连 </tag>
            
            <tag> 532x </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯--AB536X系列PWM的使用</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AFAB536X%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87PWM%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AFAB536X%E7%B3%BB%E5%88%97%E8%8A%AF%E7%89%87PWM%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>AB536X 支持 3 个定时器（Timer3,Timer4,Timer5,）PWM 输出，每个定时器支持 3 路 PWM 输出 ，分别是 PWM0 ，PWM1，PWM2，其中每个定时器支持 3 路周期相同，可设置不同占空比的 PWM 同时输出。<br> AB536X 每组 timer定时器 对应 PWM IO 说明：<br>Timer3:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">G1: PWM0-&gt;PB0  PWM1-&gt;PB1  PWM2-&gt;PB2</span><br><span class="line">G2: PWM0-&gt;PB3  PWM1-&gt;PB4  PWM2-&gt;PB5</span><br><span class="line">G3: PWM0-&gt;PF2  PWM1-&gt;PA3  PWM2-&gt;PA4</span><br><span class="line">G4: PWM0-&gt;PE0</span><br></pre></td></tr></table></figure><p>Timer4:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">G1: PWM0-&gt;PE5  PWM1-&gt;PE6  PWM2-&gt;PE7</span><br><span class="line">G2:      PWM1-&gt;PF1  PWM2-&gt;PF1</span><br></pre></td></tr></table></figure><p>Timer5:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G1: PWM0-&gt;PA5  PWM1-&gt;PA6  PWM2-&gt;PA7</span><br></pre></td></tr></table></figure><p>FUNCMCON2 对应 PWM 的映射：<br>timer3-&gt;8Bit    timer4-&gt;12Bit  timer5-&gt;16Bit<br>G1-&gt;1 G2-&gt;2 ……..<br>例如：<br>Timer3 的 G1 组：<br>FUNCMCON2 &#x3D; (1&lt;&lt;8);<br>Timer3 的 G3 组：<br>FUNCMCON2 &#x3D; (3&lt;&lt;8);<br>Timer4 的 G1 组：<br>FUNCMCON2 &#x3D; (1&lt;&lt;12);</p><p>备注：<br>查询 AB536X 每组 timer 对应 PWM IO需要查阅芯片datasheet，以上数据查找自《AB5362B DataSheet》<br>查找FUNCMCON2 寄存器功能《AB536X UserManual》<br>使用出现问题请复查以上提及的文档。</p><p>SDK 默认定时器用途：<br>timer0 : 系统时钟使用<br>timer1: (可选) ledseg_ajust. 7 脚屏的时候使用  timer1_irq_init<br>timer3: (可选) 软件红外解码使用 </p><p><strong>但6x系列芯片的定时器没有被占用，可以放心使用</strong></p><p>例程：下面以 timer4 为例<br>初始化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#define PWM_MAX                     4001    </span><br><span class="line">void pwm_init(void)</span><br><span class="line">&#123;</span><br><span class="line">    //PWM2-T4-G1 PE7</span><br><span class="line">    //PWM1-T4-G1 PE6</span><br><span class="line">    //PWM0-T4-G1 PE5</span><br><span class="line"></span><br><span class="line">    GPIOEDIR &amp;= ~(BIT(7)|BIT(6)|BIT(5)) ; //DIR OUT</span><br><span class="line">GPIOEDE |= (BIT(7)|BIT(6)|BIT(5)) ; //数字 IO 口要设置上.</span><br><span class="line">GPIOEFEN |= (BIT(7)|BIT(6)|BIT(5)); //function io enable</span><br><span class="line"></span><br><span class="line">FUNCMCON2 = (1 &lt;&lt; 12); // TIMER4的G1   pwm map to G1 (PE5/6/7)timer5-&gt;16Bit timer4-&gt;12Bit timer3-&gt;8Bit</span><br><span class="line">TMR4CON = 0x00; //时钟源默认为系统时钟 24M</span><br><span class="line">TMR4CNT = 0;</span><br><span class="line">TMR4PR = PWM_MAX + 1; //例如为 24M 时, 频率为 24M/(12000*4) = 500HZ, 即周期为0.002S. //U32</span><br><span class="line">TMR4DUTY0 = 0 ; //u16 //25% 负占空比 PE1 //注意 PR &gt;= DUTY //DUTY ==PR, 全高. -1 (也就是 0xFFFF)时, 全低, 其他值表示&quot;负占空比&quot;</span><br><span class="line">TMR4DUTY1 = 0;  //u16 //50% 负占空比 PB3</span><br><span class="line">    TMR4DUTY2 = 0;  //</span><br><span class="line"></span><br><span class="line">TMR4CON |=(BIT(9) | BIT(10) | BIT(11)); //timer4 pwm0, pwm1, pwm2 enable</span><br><span class="line">TMR4CON |= BIT(0); //Timer enable (defualt work in counter mode)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>扫描：<br>呼吸灯扫描放5ms中断，用作频谱灯需要放1ms中断，例程是简单的呼吸灯效果。主要是调整占空比 duty &#x3D; TMR4DUTY0 &#x2F;TMR4PR ;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">AT(.com_text.rgb)</span><br><span class="line">void rgb_breath_scan(void)&#123; // 5ms  放5ms中断</span><br><span class="line">    static u16 cnt = 0;</span><br><span class="line">    static u8 dir = 0;</span><br><span class="line"></span><br><span class="line">    if(dir==0)&#123;</span><br><span class="line">        if(cnt&lt;PWM_MAX)&#123;</span><br><span class="line">            cnt+=7;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            dir =1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else if(dir==1)&#123;</span><br><span class="line">          if(cnt&gt;7)&#123;</span><br><span class="line">            cnt-=7;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            dir =0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">TMR4DUTY0 = cnt ; </span><br><span class="line">TMR4DUTY1 = cnt; </span><br><span class="line">     TMR4DUTY2 = cnt; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PWM </tag>
            
            <tag> 536X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯--AB532X系列PWM的使用</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF532X%E7%B3%BB%E5%88%97PWM%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AF532X%E7%B3%BB%E5%88%97PWM%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">实例：</span><br><span class="line">PB3实现呼吸灯</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在pwm_port_init函数下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GPIOBDIR &amp;= ~BIT(3); //DIR OUT</span><br><span class="line">GPIOBDE |= BIT(3); //数字 IO 口要设置上.</span><br><span class="line">GPIOBFEN |= BIT(3); //function io enable</span><br><span class="line">FUNCMCON2 = (2 &lt;&lt; 8); // TIMER3的G2   pwm map to G1 (PE1/2/3)timer5-&gt;16Bit timer4-&gt;12Bit timer3-&gt;8Bit</span><br><span class="line">TMR3CON = 0x00; //时钟源默认为系统时钟 24M</span><br><span class="line">TMR3CNT = 0;</span><br><span class="line">TMR3PR = 1000; //例如为 24M 时, 频率为 24M/(12000*4) = 500HZ, 即周期为0.002S. //U32</span><br><span class="line">//TMR3DUTY0 = 12000 - 1; //u16 //25% 负占空比 PE1 //注意 PR &gt;= DUTY //DUTY ==PR, 全高. -1 (也就是 0xFFFF)时, 全低, 其他值表示&quot;负占空比&quot;</span><br><span class="line">TMR3DUTY1 = 1000-1; //u16 //50% 负占空比 PB2</span><br><span class="line">//TMR3DUTY2 = 12000*3- 1; //u16 //75% 负占空比 PE3</span><br><span class="line">TMR3CON |= BIT(10); //timer5 pwm0, pwm1, pwm2 enable</span><br><span class="line">TMR3CON |= BIT(0); //Timer enable (defualt work in counter mode)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意：<br>如果是在port_pwm.c下写的初始化函数。<br>打开这个宏，不然程序不会执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define TIMER_PWM_EN                    1           //TIMER的PWM区别于LPWM</span><br></pre></td></tr></table></figure><p>在bsp_sys_init函数下调用初始化函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#if PWM_RGB_EN</span><br><span class="line">    pwm_init();</span><br><span class="line">#endif // PWM_RGB_EN</span><br><span class="line">    pwm_port_init();</span><br><span class="line">    /// enable user timer for display &amp; dac</span><br><span class="line">    sys_set_tmr_enable(1, 1);</span><br></pre></td></tr></table></figure><h4 id="编写扫描函数"><a href="#编写扫描函数" class="headerlink" title="编写扫描函数"></a>编写扫描函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">AT(.com_text.rgb)</span><br><span class="line">void rgb_breath_scan(void)      // 5ms  放5ms中断</span><br><span class="line">&#123;</span><br><span class="line">    static u8 cnt = 0;</span><br><span class="line">    static u8 dir = 0;</span><br><span class="line">    static u16 cduty = 0;</span><br><span class="line">    cnt++;</span><br><span class="line">    if(cnt&gt;=20)&#123;</span><br><span class="line">        if(dir==0)&#123;</span><br><span class="line">        if(cduty&lt;999)&#123;</span><br><span class="line">            cduty = cduty + 9;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            dir = 1;</span><br><span class="line">            cduty = 999;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            if(cduty&gt;9)</span><br><span class="line">            &#123;</span><br><span class="line">                 cduty = cduty - 9;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                dir = 0;</span><br><span class="line">                cduty = 0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt = 0;</span><br><span class="line">    &#125;</span><br><span class="line">        TMR3DUTY1 = cduty;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用扫描函数"><a href="#调用扫描函数" class="headerlink" title="调用扫描函数"></a>调用扫描函数</h3><p>在usr_tmr5ms_isr下调用，增加的标志位为真代表播放状态，否则是暂停状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(RGB_LED_flag)&#123;</span><br><span class="line">        rgb_breath_scan();</span><br><span class="line">   &#125;else&#123;</span><br><span class="line">    TMR3DUTY1=999;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 532X </tag>
            
            <tag> PWM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中科蓝讯--AB532X系列TWS的接口调用</title>
      <link href="/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AFAB532X%E7%B3%BB%E5%88%97TWS%E7%9A%84%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8/"/>
      <url>/myblog/2022/07/19/%E4%B8%AD%E7%A7%91%E8%93%9D%E8%AE%AFAB532X%E7%B3%BB%E5%88%97TWS%E7%9A%84%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>TWS的按键操作：<br>长按mode按键TWS配对，长按连接手机&#x2F;回连手机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">if(xcfg_cb.bt_tws_en &amp;&amp; xcfg_cb.bt_tws_pair_mode == 2)&#123;</span><br><span class="line">if(bt_tws_is_connected()) &#123;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">bt_tws_search_slave();</span><br><span class="line">printf(&quot;bt_tws_search_slave\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(bt_nor_is_connected())&#123;//手机已经连接</span><br><span class="line">printf(&quot;disconnect with boletooth\n&quot;);</span><br><span class="line">bsp_clr_mute_sta();</span><br><span class="line">bt_nor_disconnect();//M键断开手机蓝牙.或者bt_disconnect()</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">printf(&quot;connect with boletooth\n&quot;);</span><br><span class="line">bt_connect();</span><br><span class="line">//bt_nor_connect();//M键回连手机蓝牙</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从提示音得到主从机信息，和蓝牙耳机的有所不同<br>void func_bt_warning(void);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if(left_warning) &#123; //left channel       //slave</span><br><span class="line">            func_cb.mp3_res_play(RES_BUF_LEFT_CH_MP3, RES_LEN_LEFT_CH_MP3);</span><br><span class="line">printf(&quot;         slave   slave            \n&quot;);</span><br><span class="line">    get_tws_chanl=2;//副机等于2</span><br><span class="line">        &#125;</span><br><span class="line">        if(right_warning) &#123;  //right channel      //master</span><br><span class="line">            delay_5ms(200);</span><br><span class="line">            func_cb.mp3_res_play(RES_BUF_RIGHT_CH_MP3, RES_LEN_RIGHT_CH_MP3);</span><br><span class="line">    printf(&quot;         master   master            \n&quot;);</span><br><span class="line">get_tws_chanl=1;//主机等于1</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝讯开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TWS </tag>
            
            <tag> 532X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/myblog/2022/07/16/hello-world/"/>
      <url>/myblog/2022/07/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
